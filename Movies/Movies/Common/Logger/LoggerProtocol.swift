//
//  LoggerProtocol.swift
//  Movies
//
//  Created by Roman Zverik on 17.02.2021.
//  Copyright ¬© 2021 ZRS. All rights reserved.
//

import Foundation

/// –£—Ä–æ–≤–Ω–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
enum LogLevel: String, CaseIterable {
	case info = "üü¶"
	case debug = "üü©"
	case warning = "üü®"
	case error = "üü•"
	case request = "üì°"
	case requestStub = "üíæ"
}

/// –£—Ä–æ–≤–Ω–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
enum ContextLevel: String, CaseIterable {
	case logLevel
	case message
	case context
	case fileAndLine
	case function
}

protocol LoggerProtocol: class {
	/// –ü–æ–ª–∏—Ç–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é, read-only
	var logLevels: [LogLevel] { get }
	var contextLevels: [ContextLevel] { get }
	
	/// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
	/// - Parameters:
	/// 	- filter: –£—Ä–æ–≤–µ–Ω—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—é –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
	func set(logLevels: [LogLevel])
	
	/// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
	/// - Parameters:
	/// 	- filter: –£—Ä–æ–≤–µ–Ω—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
	func set(contextLevels: [ContextLevel])
	
	/// –ú–µ—Ç–æ–¥, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—â–∏–π –∑–∞–ø–∏—Å—å –ª–æ–≥–≥–∏—Ä—É–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	/// - Parameters:
	/// 	- level: —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
	/// 	- message: —Å–æ–æ–±—â–µ–Ω–∏–µ
	/// 	- context: –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
	/// 	- file: —Ñ–∞–π–ª, –æ—Ç–∫—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
	/// 	- line: –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
	/// 	- function: —Ñ—É–Ω–∫—Ü–∏—è
	func log(_ level: LogLevel, _ message: Any, context: String?, file: String, line: Int, function: String)
}

extension LoggerProtocol {
	func log(_ level: LogLevel, _ message: Any, context: String? = nil, file: String = #fileID, line: Int = #line, function: String = #function) {
		log(level, message, context: context, file: file, line: line, function: function)
	}
}
